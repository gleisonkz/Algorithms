[
    {
        "label": "Account",
        "importPath": "Account",
        "description": "Account",
        "isExtraImport": true,
        "detail": "Account",
        "documentation": {
            "value": "\n```python\nimport Account\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Account",
        "importPath": "Account",
        "description": "Account",
        "isExtraImport": true,
        "detail": "Account",
        "documentation": {
            "value": "\n```python\nimport Account\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Account",
        "importPath": "Account",
        "description": "Account",
        "isExtraImport": true,
        "detail": "Account",
        "documentation": {
            "value": "\n```python\nimport Account\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Calculator",
        "importPath": "Calculator",
        "description": "Calculator",
        "isExtraImport": true,
        "detail": "Calculator",
        "documentation": {
            "value": "\n```python\nimport Calculator\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Calculator",
        "importPath": "Calculator",
        "description": "Calculator",
        "isExtraImport": true,
        "detail": "Calculator",
        "documentation": {
            "value": "\n```python\nimport Calculator\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Car",
        "importPath": "Car",
        "description": "Car",
        "isExtraImport": true,
        "detail": "Car",
        "documentation": {
            "value": "\n```python\nimport Car\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "sleep",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {
            "value": "\n```python\nimport time\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {
            "value": "\n```python\nimport sys\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {
            "value": "\n```python\nimport os\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "ATM",
        "importPath": "ATM",
        "description": "ATM",
        "isExtraImport": true,
        "detail": "ATM",
        "documentation": {
            "value": "\n```python\nimport ATM\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "RaceCar",
        "importPath": "RaceCar",
        "description": "RaceCar",
        "isExtraImport": true,
        "detail": "RaceCar",
        "documentation": {
            "value": "\n```python\nimport RaceCar\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Account",
        "kind": 6,
        "importPath": "Account.Account",
        "description": "Account.Account",
        "peekOfCode": "class Account:\n    def __init__(self, accountID):\n        self.AccountID = accountID\n        self.balance = 0.0\n    def showBalance(self):\n        return self.balance\n    def deposit(self, value):\n        self.balance += value\n    def withdrown(self, value):\n        self.balance -= value",
        "detail": "Account.Account",
        "documentation": {
            "value": "\n```python\nfrom Account.Account import Account\n```\n\n```python\n\n\n```\n\n```python\nclass Account:\n    def __init__(self, accountID):\n        self.AccountID = accountID\n        self.balance = 0.0\n    def showBalance(self):\n        return self.balance\n    def deposit(self, value):\n        self.balance += value\n    def withdrown(self, value):\n        self.balance -= value\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "account1",
        "kind": 5,
        "importPath": "Account.Program",
        "description": "Account.Program",
        "peekOfCode": "account1 = Account(1)\naccount2 = Account(2)\naccount1.deposit(10)\naccount2.deposit(5)\nprint(account1.showBalance())\nprint(account2.showBalance())\naccount1.transfer(account2, 5)\nprint(account1.showBalance())\nprint(account2.showBalance())",
        "detail": "Account.Program",
        "documentation": {
            "value": "\n```python\nfrom Account.Program import account1\n```\n\n```python\n\n\n```\n\n```python\naccount1 = Account(1)\naccount2 = Account(2)\naccount1.deposit(10)\naccount2.deposit(5)\nprint(account1.showBalance())\nprint(account2.showBalance())\naccount1.transfer(account2, 5)\nprint(account1.showBalance())\nprint(account2.showBalance())\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "account2",
        "kind": 5,
        "importPath": "Account.Program",
        "description": "Account.Program",
        "peekOfCode": "account2 = Account(2)\naccount1.deposit(10)\naccount2.deposit(5)\nprint(account1.showBalance())\nprint(account2.showBalance())\naccount1.transfer(account2, 5)\nprint(account1.showBalance())\nprint(account2.showBalance())",
        "detail": "Account.Program",
        "documentation": {
            "value": "\n```python\nfrom Account.Program import account2\n```\n\n```python\n\n\n```\n\n```python\naccount2 = Account(2)\naccount1.deposit(10)\naccount2.deposit(5)\nprint(account1.showBalance())\nprint(account2.showBalance())\naccount1.transfer(account2, 5)\nprint(account1.showBalance())\nprint(account2.showBalance())\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Calculator",
        "kind": 6,
        "importPath": "Calculator.Calculator",
        "description": "Calculator.Calculator",
        "peekOfCode": "class Calculator:\n    lastResult = 0\n    def sum(self, number1, number2):\n        result = number1 + number2\n        self.lastResult = result\n        return result\n    def getLastResult(self):\n        return self.lastResult\n    @staticmethod\n    def subtraction(number1, number2):",
        "detail": "Calculator.Calculator",
        "documentation": {
            "value": "\n```python\nfrom Calculator.Calculator import Calculator\n```\n\n```python\n\n\n```\n\n```python\nclass Calculator:\n    lastResult = 0\n    def sum(self, number1, number2):\n        result = number1 + number2\n        self.lastResult = result\n        return result\n    def getLastResult(self):\n        return self.lastResult\n    @staticmethod\n    def subtraction(number1, number2):\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "objCalc",
        "kind": 5,
        "importPath": "Calculator.Program",
        "description": "Calculator.Program",
        "peekOfCode": "objCalc = Calculator()\nobjCalc.lastResult = 15\nprint(objCalc.lastResult)\nfirstResult = objCalc.sum(2, 5)\nprint(firstResult)\nprint(Calculator.subtraction(6, 5))\nprint(Calculator.lastResult)",
        "detail": "Calculator.Program",
        "documentation": {
            "value": "\n```python\nfrom Calculator.Program import objCalc\n```\n\n```python\n\n\n```\n\n```python\nobjCalc = Calculator()\nobjCalc.lastResult = 15\nprint(objCalc.lastResult)\nfirstResult = objCalc.sum(2, 5)\nprint(firstResult)\nprint(Calculator.subtraction(6, 5))\nprint(Calculator.lastResult)\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "objCalc.lastResult",
        "kind": 5,
        "importPath": "Calculator.Program",
        "description": "Calculator.Program",
        "peekOfCode": "objCalc.lastResult = 15\nprint(objCalc.lastResult)\nfirstResult = objCalc.sum(2, 5)\nprint(firstResult)\nprint(Calculator.subtraction(6, 5))\nprint(Calculator.lastResult)",
        "detail": "Calculator.Program",
        "documentation": {
            "value": "\n```python\nfrom Calculator.Program import objCalc.lastResult\n```\n\n```python\n\n\n```\n\n```python\nobjCalc.lastResult = 15\nprint(objCalc.lastResult)\nfirstResult = objCalc.sum(2, 5)\nprint(firstResult)\nprint(Calculator.subtraction(6, 5))\nprint(Calculator.lastResult)\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "firstResult",
        "kind": 5,
        "importPath": "Calculator.Program",
        "description": "Calculator.Program",
        "peekOfCode": "firstResult = objCalc.sum(2, 5)\nprint(firstResult)\nprint(Calculator.subtraction(6, 5))\nprint(Calculator.lastResult)",
        "detail": "Calculator.Program",
        "documentation": {
            "value": "\n```python\nfrom Calculator.Program import firstResult\n```\n\n```python\n\n\n```\n\n```python\nfirstResult = objCalc.sum(2, 5)\nprint(firstResult)\nprint(Calculator.subtraction(6, 5))\nprint(Calculator.lastResult)\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Car",
        "kind": 6,
        "importPath": "car.Car",
        "description": "car.Car",
        "peekOfCode": "class Car:\n    model: str\n    color: str\n    year: int\n    brand: str\n    chassis: str\n    owner: str\n    maxSpeed: int\n    currentSpeed: int\n    doorNumbers: int",
        "detail": "car.Car",
        "documentation": {
            "value": "\n```python\nfrom car.Car import Car\n```\n\n```python\n\n\n```\n\n```python\nclass Car:\n    model: str\n    color: str\n    year: int\n    brand: str\n    chassis: str\n    owner: str\n    maxSpeed: int\n    currentSpeed: int\n    doorNumbers: int\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "cars",
        "kind": 5,
        "importPath": "car.Program",
        "description": "car.Program",
        "peekOfCode": "cars = []\nfor index in range(2):\n    car = Car()\n    car.model = input(\"Type the model: \")\n    car.color = input(\"Type the color: \")\n    car.year = input(\"Type the year: \")\n    car.brand = input(\"Type the brand: \")\n    car.chassis = input(\"Type the chassis: \")\n    car.owner = input(\"Who's the owner? \")\n    car.maxSpeed = input(\"What's the max speed? \")",
        "detail": "car.Program",
        "documentation": {
            "value": "\n```python\nfrom car.Program import cars\n```\n\n```python\n\n\n```\n\n```python\ncars = []\nfor index in range(2):\n    car = Car()\n    car.model = input(\"Type the model: \")\n    car.color = input(\"Type the color: \")\n    car.year = input(\"Type the year: \")\n    car.brand = input(\"Type the brand: \")\n    car.chassis = input(\"Type the chassis: \")\n    car.owner = input(\"Who's the owner? \")\n    car.maxSpeed = input(\"What's the max speed? \")\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Account",
        "kind": 6,
        "importPath": "Inheritance.Account",
        "description": "Inheritance.Account",
        "peekOfCode": "class Account:\n    def __init__(self, number):\n        self.number = number\n        self.balance = 0.0\n    def getBalance(self):\n        return self.balance\n    def deposit(self, value):\n        self.balance += value\n    def withdrown(self, value):\n        self.balance -= value",
        "detail": "Inheritance.Account",
        "documentation": {
            "value": "\n```python\nfrom Inheritance.Account import Account\n```\n\n```python\n\n\n```\n\n```python\nclass Account:\n    def __init__(self, number):\n        self.number = number\n        self.balance = 0.0\n    def getBalance(self):\n        return self.balance\n    def deposit(self, value):\n        self.balance += value\n    def withdrown(self, value):\n        self.balance -= value\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "SavingAccount",
        "kind": 6,
        "importPath": "Inheritance.Account",
        "description": "Inheritance.Account",
        "peekOfCode": "class SavingAccount(Account):\n    def __init__(self, number):\n        super().__init__(number)\n        self.__yield = 0\n    def getYield(self):\n        return self.__yield\n    def applyYield(self, rate):\n        self.__yield += super().getBalance() * rate / 100\nobj = SavingAccount(1)\nobj.deposit(200.0)",
        "detail": "Inheritance.Account",
        "documentation": {
            "value": "\n```python\nfrom Inheritance.Account import SavingAccount\n```\n\n```python\n\n\n```\n\n```python\nclass SavingAccount(Account):\n    def __init__(self, number):\n        super().__init__(number)\n        self.__yield = 0\n    def getYield(self):\n        return self.__yield\n    def applyYield(self, rate):\n        self.__yield += super().getBalance() * rate / 100\nobj = SavingAccount(1)\nobj.deposit(200.0)\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "obj",
        "kind": 5,
        "importPath": "Inheritance.Account",
        "description": "Inheritance.Account",
        "peekOfCode": "obj = SavingAccount(1)\nobj.deposit(200.0)\nobj.applyYield(10)\nprint(obj.getBalance())\nprint(obj.getYield())",
        "detail": "Inheritance.Account",
        "documentation": {
            "value": "\n```python\nfrom Inheritance.Account import obj\n```\n\n```python\n\n\n```\n\n```python\nobj = SavingAccount(1)\nobj.deposit(200.0)\nobj.applyYield(10)\nprint(obj.getBalance())\nprint(obj.getYield())\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Account",
        "kind": 6,
        "importPath": "MenuAccount.Account",
        "description": "MenuAccount.Account",
        "peekOfCode": "class Account:\n    def __init__(self, accountID):\n        self.AccountID = accountID\n        self.balance = 0.0\n    def showBalance(self):\n        return self.balance\n    def deposit(self, value):\n        self.balance += value\n    def withdrown(self, value):\n        self.balance -= value",
        "detail": "MenuAccount.Account",
        "documentation": {
            "value": "\n```python\nfrom MenuAccount.Account import Account\n```\n\n```python\n\n\n```\n\n```python\nclass Account:\n    def __init__(self, accountID):\n        self.AccountID = accountID\n        self.balance = 0.0\n    def showBalance(self):\n        return self.balance\n    def deposit(self, value):\n        self.balance += value\n    def withdrown(self, value):\n        self.balance -= value\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "ATM",
        "kind": 6,
        "importPath": "MenuAccount.ATM",
        "description": "MenuAccount.ATM",
        "peekOfCode": "class ATM:\n    currentAccount = None\n    def __init__(self, currentAccount) -> None:\n        os.system('cls||clear')\n        self.currentAccount = currentAccount\n    def showMenu(self):\n        print(\"************Welcome to Account Bank**************\")\n        action = self.getUserOption()\n        if action == 1:\n            print(self.currentAccount.showBalance())",
        "detail": "MenuAccount.ATM",
        "documentation": {
            "value": "\n```python\nfrom MenuAccount.ATM import ATM\n```\n\n```python\n\n\n```\n\n```python\nclass ATM:\n    currentAccount = None\n    def __init__(self, currentAccount) -> None:\n        os.system('cls||clear')\n        self.currentAccount = currentAccount\n    def showMenu(self):\n        print(\"************Welcome to Account Bank**************\")\n        action = self.getUserOption()\n        if action == 1:\n            print(self.currentAccount.showBalance())\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "userAccount",
        "kind": 5,
        "importPath": "MenuAccount.Program",
        "description": "MenuAccount.Program",
        "peekOfCode": "userAccount = Account(132131512135)\nobjATM = ATM(userAccount)\nobjATM.showMenu()",
        "detail": "MenuAccount.Program",
        "documentation": {
            "value": "\n```python\nfrom MenuAccount.Program import userAccount\n```\n\n```python\n\n\n```\n\n```python\nuserAccount = Account(132131512135)\nobjATM = ATM(userAccount)\nobjATM.showMenu()\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "objATM",
        "kind": 5,
        "importPath": "MenuAccount.Program",
        "description": "MenuAccount.Program",
        "peekOfCode": "objATM = ATM(userAccount)\nobjATM.showMenu()",
        "detail": "MenuAccount.Program",
        "documentation": {
            "value": "\n```python\nfrom MenuAccount.Program import objATM\n```\n\n```python\n\n\n```\n\n```python\nobjATM = ATM(userAccount)\nobjATM.showMenu()\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "firstCar",
        "kind": 5,
        "importPath": "RaceCar.Program",
        "description": "RaceCar.Program",
        "peekOfCode": "firstCar = RaceCar(1, 'Test', 'Team 1', 120.00)\nprint(firstCar.currentSpeed)\nfirstCar.turnOn()\nfirstCar.speedUp(50)\nprint(firstCar.currentSpeed)",
        "detail": "RaceCar.Program",
        "documentation": {
            "value": "\n```python\nfrom RaceCar.Program import firstCar\n```\n\n```python\n\n\n```\n\n```python\nfirstCar = RaceCar(1, 'Test', 'Team 1', 120.00)\nprint(firstCar.currentSpeed)\nfirstCar.turnOn()\nfirstCar.speedUp(50)\nprint(firstCar.currentSpeed)\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "RaceCar",
        "kind": 6,
        "importPath": "RaceCar.RaceCar",
        "description": "RaceCar.RaceCar",
        "peekOfCode": "class RaceCar:\n    carID: int = None\n    pilot: str = None\n    team: str = None\n    maxSpeed: float = None\n    currentSpeed: float = None\n    isTurnOn: bool = None\n    def __init__(self, carID: int, pilot: str, team: str, maxSpeed: float):\n        self.carID = carID\n        self.pilot = pilot",
        "detail": "RaceCar.RaceCar",
        "documentation": {
            "value": "\n```python\nfrom RaceCar.RaceCar import RaceCar\n```\n\n```python\n\n\n```\n\n```python\nclass RaceCar:\n    carID: int = None\n    pilot: str = None\n    team: str = None\n    maxSpeed: float = None\n    currentSpeed: float = None\n    isTurnOn: bool = None\n    def __init__(self, carID: int, pilot: str, team: str, maxSpeed: float):\n        self.carID = carID\n        self.pilot = pilot\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Date",
        "kind": 6,
        "importPath": "revision.Date",
        "description": "revision.Date",
        "peekOfCode": "class Date:\n    day = None\n    month = None\n    year = None\n    def init(self, day, month, year):\n        self.month = self.validateMonth(month)\n        self.day = self.validateDay(day)\n        self.year = self.validateYear(year)\n    def validateMonth(self, month):\n        (month <= 0 or month > 12) and self.sair('month invalido')",
        "detail": "revision.Date",
        "documentation": {
            "value": "\n```python\nfrom revision.Date import Date\n```\n\n```python\n\n\n```\n\n```python\nclass Date:\n    day = None\n    month = None\n    year = None\n    def init(self, day, month, year):\n        self.month = self.validateMonth(month)\n        self.day = self.validateDay(day)\n        self.year = self.validateYear(year)\n    def validateMonth(self, month):\n        (month <= 0 or month > 12) and self.sair('month invalido')\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Lamp",
        "kind": 6,
        "importPath": "revision.Lamp",
        "description": "revision.Lamp",
        "peekOfCode": "class Lamp:\n    state = None\n    def __init__(self, state):\n        self.state = state",
        "detail": "revision.Lamp",
        "documentation": {
            "value": "\n```python\nfrom revision.Lamp import Lamp\n```\n\n```python\n\n\n```\n\n```python\nclass Lamp:\n    state = None\n    def __init__(self, state):\n        self.state = state\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Person",
        "kind": 6,
        "importPath": "revision.Pessoa",
        "description": "revision.Pessoa",
        "peekOfCode": "class Person:\n    name = None\n    age = None\n    address = None\n    def __init__(self, name, age, address):\n        self.name = name\n        self.age = age\n        self.address = address\n    def setName(self, name):\n        self.name = name",
        "detail": "revision.Pessoa",
        "documentation": {
            "value": "\n```python\nfrom revision.Pessoa import Person\n```\n\n```python\n\n\n```\n\n```python\nclass Person:\n    name = None\n    age = None\n    address = None\n    def __init__(self, name, age, address):\n        self.name = name\n        self.age = age\n        self.address = address\n    def setName(self, name):\n        self.name = name\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Teacher",
        "kind": 6,
        "importPath": "revision.Pessoa",
        "description": "revision.Pessoa",
        "peekOfCode": "class Teacher(Person):\n    salary = None\n    curriculum = None\n    def __init__(self, salary, curriculum, name, age, address):\n        self.salary = salary\n        self.curriculum = curriculum\n        super().__init__(name, age, address)\n    def setSalary(self, salary):\n        self.address = salary\n    def getAddress(self, address):",
        "detail": "revision.Pessoa",
        "documentation": {
            "value": "\n```python\nfrom revision.Pessoa import Teacher\n```\n\n```python\n\n\n```\n\n```python\nclass Teacher(Person):\n    salary = None\n    curriculum = None\n    def __init__(self, salary, curriculum, name, age, address):\n        self.salary = salary\n        self.curriculum = curriculum\n        super().__init__(name, age, address)\n    def setSalary(self, salary):\n        self.address = salary\n    def getAddress(self, address):\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "Student",
        "kind": 6,
        "importPath": "revision.Pessoa",
        "description": "revision.Pessoa",
        "peekOfCode": "class Student(Person):\n    registration = None\n    course = None\n    def __init__(self, registration, course, name, age, address):\n        self.registration = registration\n        self.course = course\n        super().__init__(name, age, address)\n    def setRegistration(self, registration):\n        self.registration = registration\n    def getRegistration(self):",
        "detail": "revision.Pessoa",
        "documentation": {
            "value": "\n```python\nfrom revision.Pessoa import Student\n```\n\n```python\n\n\n```\n\n```python\nclass Student(Person):\n    registration = None\n    course = None\n    def __init__(self, registration, course, name, age, address):\n        self.registration = registration\n        self.course = course\n        super().__init__(name, age, address)\n    def setRegistration(self, registration):\n        self.registration = registration\n    def getRegistration(self):\n```\n",
            "supportThemeIcons": false
        }
    },
    {
        "label": "UnityConversor",
        "kind": 6,
        "importPath": "revision.UnitConversor",
        "description": "revision.UnitConversor",
        "peekOfCode": "class UnityConversor:\n    @staticmethod\n    def meterToFeet(value):\n        return value * 10.76\n    @staticmethod\n    def feetToCent(value):\n        return value * 30.48\n    @staticmethod\n    def mileToAcre(value):\n        return value * 640",
        "detail": "revision.UnitConversor",
        "documentation": {
            "value": "\n```python\nfrom revision.UnitConversor import UnityConversor\n```\n\n```python\n\n\n```\n\n```python\nclass UnityConversor:\n    @staticmethod\n    def meterToFeet(value):\n        return value * 10.76\n    @staticmethod\n    def feetToCent(value):\n        return value * 30.48\n    @staticmethod\n    def mileToAcre(value):\n        return value * 640\n```\n",
            "supportThemeIcons": false
        }
    }
]